version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: forage-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: forage-stores
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - forage-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: forage-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - forage-network

  # Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: forage-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/forage-stores?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key
      JWT_EXPIRES_IN: 7d
      ADMIN_PASSWORD: AdminDev123!
      PORT: 3000
      FRONTEND_URL: http://localhost:3001
      LOG_LEVEL: debug
      ENABLE_SWAGGER: true
    volumes:
      - .:/app
      - /app/node_modules
      - uploads_data:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - forage-network
    command: npm run start:dev

  # Background Worker (Optional)
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: forage-worker
    restart: unless-stopped
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://admin:password@mongodb:27017/forage-stores?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - forage-network
    command: npm run worker:start
    profiles:
      - worker # Optional service, start with: docker-compose --profile worker up

  # MongoDB Admin Interface (Optional)
  mongo-express:
    image: mongo-express
    container_name: forage-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - forage-network
    profiles:
      - tools # Optional service, start with: docker-compose --profile tools up

  # Redis Commander (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: forage-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - forage-network
    profiles:
      - tools # Optional service

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  forage-network:
    driver: bridge
